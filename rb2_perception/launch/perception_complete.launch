<?xml version="1.0"?>
<launch>
  <arg name="id_robot" default="$(optenv ROBOT_ID robot)"/>
  <arg name="prefix" default="$(arg id_robot)_"/>

  <!-- Camera locator arguments -->
  <arg name="run_ar_locator" default="$(optenv ROBOT_RUN_AR_LOCATOR false)"/>
  <arg name="camera_topic" default="$(optenv ROBOT_PERCEPTION_CAMERA_TOPIC front_rgbd_camera/rgb/image_raw)" />
  <arg name="camera_info_topic" default="$(optenv ROBOT_PERCEPTION_CAMERA_INFO_TOPIC front_rgbd_camera/rgb/camera_info)" />

  <!-- Laser locator arguments -->
  <arg name="run_reflector_locator" default="$(optenv ROBOT_RUN_REFLECTOR_LOCATOR false)"/>
  <arg name="filter_config_file" default="$(optenv ROBOT_LASER_MODEL_INTENSITY_FILTER default)_intensity_filter"/>
  <arg name="scan_topic" default="$(optenv ROBOT_PERCEPTION_SCAN_TOPIC front_laser/scan)"/>
  <arg name="cloud_topic" default="perception_filtered_points"/>

  <arg name="docking_station_two_tag_locator_node_name" default="docking_station_laser_locator"/>
	<arg name="docking_station_object_frame" default="$(arg prefix)docking_station_laser"/>
  <arg name="docking_station_tag_distance" default="$(optenv ROBOT_DOCKING_STATION_TAG_DISTANCE 0.3)"/>
  <arg name="docking_station_tag_max_distance_detection" default="$(optenv ROBOT_DOCKING_STATION_TAG_MAX_DISTANCE_DETECTION 3.5)"/>

  <arg name="cart_two_tag_locator_node_name" default="cart_laser_locator"/>
	<arg name="cart_object_frame" default="$(arg prefix)cart_laser"/>
  <arg name="cart_tag_distance" default="$(optenv ROBOT_CART_TAG_DISTANCE 0.6)"/>
  <arg name="cart_tag_max_distance_detection" default="$(optenv ROBOT_CART_TAG_MAX_DISTANCE_DETECTION 3.5)"/>

  <arg name="docking_merge_locator_distance_threshold" default="0.1"/>
  <arg name="docking_merge_locator_ar_marker_frame" default="robot_ar_marker_noisy_([0-9]+)"/>
  <arg name="docking_merge_locator_laser_frame" default="robot_docking_station_laser_noisy_([0-9]+)"/>
  <arg name="docking_merge_locator_position_x_source" default="laser"/>
  <arg name="docking_merge_locator_position_y_source" default="laser"/>
  <arg name="docking_merge_locator_orientation_source" default="laser"/>

  <arg name="cart_merge_locator_distance_threshold" default="0.3"/>
  <arg name="cart_merge_locator_ar_marker_frame" default="robot_ar_marker_noisy_([0-9]+)"/>
  <arg name="cart_merge_locator_laser_frame" default="robot_cart_laser_noisy_([0-9]+)"/>
  <arg name="cart_merge_locator_position_x_source" default="camera"/>
  <arg name="cart_merge_locator_position_y_source" default="laser"/>
  <arg name="cart_merge_locator_orientation_source" default="laser"/>

  <group ns="$(arg id_robot)">

    <group if="$(arg run_reflector_locator)">

      <!-- Launch AR locator to detect markers and publish them as robot_ar_marker_#-->
      <include if="$(arg run_ar_locator)" file="$(find rb2_perception)/launch/ar_locator.launch">
        <arg name="id_robot" value="$(arg id_robot)"/>
        <arg name="camera_topic_name" value="$(arg camera_topic)" />
        <arg name="camera_info_topic_name" value="$(arg camera_info_topic)" />
        <arg name="has_special_markers" value="true" />
        <!-- This markers file is intended to change just qr size, publishing them with the default name -->
        <arg name="markers_file" default="$(find rb2_perception)/config/ar_markers_refactor.yaml" />
      </include>

      <!-- Intensity filter from scan to cloud -->
      <include file="$(find rb2_perception)/launch/scan_to_cloud.launch">
        <arg name="id_robot" value="$(arg id_robot)"/>
        <arg name="source_topic" value="$(arg scan_topic)"/>
        <arg name="filter_config_file" value="$(arg filter_config_file)"/>
        <arg name="target_topic" value="$(arg cloud_topic)"/>
        <arg name="target_frame" value="$(arg prefix)odom"/>
      </include>

      <!-- Launch laser locator to detect docking_station using reflectors -->
      <include file="$(find rb2_perception)/launch/multi_two_tags_locator.launch">
        <arg name="id_robot" value="$(arg id_robot)"/>
        <arg name="two_tag_locator_node_name" value="$(arg docking_station_two_tag_locator_node_name)"/>
      	<arg name="object_frame" value="$(arg docking_station_object_frame)"/>
      	<arg name="input_topic_name" value="$(arg cloud_topic)"/>
        <arg name="tag_distance" value="$(arg docking_station_tag_distance)"/>
        <arg name="tag_max_distance_detection" value="$(arg docking_station_tag_max_distance_detection)"/>
      </include>

      <!-- Launch merge_locator to publish docking station merged detections from camera and laser -->
      <include file="$(find rb2_perception)/launch/merge_locator.launch">
        <arg name="id_robot" value="$(arg id_robot)"/>
        <arg name="merged_object" value="docking_station"/>
        <arg name="distance_threshold" value="$(arg docking_merge_locator_distance_threshold)"/>
        <arg name="ar_marker_frame" value="$(arg docking_merge_locator_ar_marker_frame)"/>
        <arg name="laser_frame" value="$(arg docking_merge_locator_laser_frame)"/>
        <arg name="position_x_source" value="$(arg docking_merge_locator_position_x_source)"/>
        <arg name="position_y_source" value="$(arg docking_merge_locator_position_y_source)"/>
        <arg name="orientation_source" value="$(arg docking_merge_locator_orientation_source)"/>
      </include>

      <!-- Launch laser locator to detect carts using reflectors -->
      <include file="$(find rb2_perception)/launch/multi_two_tags_locator.launch">
        <arg name="id_robot" value="$(arg id_robot)"/>
        <arg name="two_tag_locator_node_name" value="$(arg cart_two_tag_locator_node_name)"/>
      	<arg name="object_frame" value="$(arg cart_object_frame)"/>
      	<arg name="input_topic_name" value="$(arg cloud_topic)"/>
        <arg name="tag_distance" value="$(arg cart_tag_distance)"/>
        <arg name="tag_max_distance_detection" value="$(arg cart_tag_max_distance_detection)"/>
      </include>

      <!-- Launch merge_locator to publish cart merging detections from camera and laser -->
      <include file="$(find rb2_perception)/launch/merge_locator.launch">
        <arg name="id_robot" value="$(arg id_robot)"/>
        <arg name="merged_object" value="cart"/>
        <arg name="distance_threshold" value="$(arg cart_merge_locator_distance_threshold)"/>
      	<arg name="ar_marker_frame" value="$(arg cart_merge_locator_ar_marker_frame)"/>
      	<arg name="laser_frame" value="$(arg cart_merge_locator_laser_frame)"/>
        <arg name="position_x_source" value="$(arg cart_merge_locator_position_x_source)"/>
        <arg name="position_y_source" value="$(arg cart_merge_locator_position_y_source)"/>
        <arg name="orientation_source" value="$(arg cart_merge_locator_orientation_source)"/>
      </include>

    </group>


    <group unless="$(arg run_reflector_locator)">

      <!-- Launch AR locator to detect markers and publish them as robot_cart_#, robot_docking_station_#-->
      <include if="$(arg run_ar_locator)" file="$(find rb2_perception)/launch/ar_locator.launch">
        <arg name="id_robot" value="$(arg id_robot)"/>
        <arg name="camera_topic_name" value="$(arg camera_topic)" />
        <arg name="camera_info_topic_name" value="$(arg camera_info_topic)" />
        <arg name="has_special_markers" value="true" />
        <!-- This markers file is intended to change just both qr size and object name -->
        <arg name="markers_file" default="$(find rb2_perception)/config/ar_markers.yaml" />
      </include>

      <node name="docking_station_pose_filter" pkg="robotnik_pose_filter" type="tf_multi_pose_filter_node" respawn="false" output="screen" clear_params="true">
        <param name="filter_position_sensitivity"       type="double" value="0.5" />
        <param name="filter_orientation_sensitivity"    type="double" value="0.1" />
        <param name="source_frame" type="string" value="$(arg prefix)odom" />
        <param name="target_frame" type="string" value="$(arg prefix)noisy_docking_station_([0-9]+)" />
        <param name="filtered_source_frame" type="string" value="$(arg prefix)odom" />
        <param name="filtered_target_frame" type="string" value="$(arg prefix)docking_station_" />
        <param name="two_d_mode" type="bool" value="true" />
        <param name="transform_timeout" type="double" value="5" />
        <rosparam param="apply_transform">[0.0, 0.0, 0.0, 0.0, 1.5707, 0.0]</rosparam>
      </node>

      <node name="cart_pose_filter" pkg="robotnik_pose_filter" type="tf_multi_pose_filter_node" respawn="false" output="screen" clear_params="true">
        <param name="filter_position_sensitivity"       type="double" value="0.5" />
        <param name="filter_orientation_sensitivity"    type="double" value="0.1" />
        <param name="source_frame" type="string" value="$(arg prefix)odom" />
        <param name="target_frame" type="string" value="$(arg prefix)noisy_cart_([0-9]+)" />
        <param name="filtered_source_frame" type="string" value="$(arg prefix)odom" />
        <param name="filtered_target_frame" type="string" value="$(arg prefix)cart_" />
        <param name="two_d_mode" type="bool" value="true" />
        <param name="transform_timeout" type="double" value="5" />
        <rosparam param="apply_transform">[0.0, 0.0, 0.0, 0.0, 1.5707, 0.0]</rosparam>
      </node>

      <!-- Add additional pose filters depending on the names defined on the markers_file -->
    </group>

  </group>

</launch>
